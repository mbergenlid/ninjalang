package autotests;

class Purity {

    var someMutableValue: Int = 1;

    val immutableProperty: Int = 1
        get = someMutableValue; //error: property 'immutableProperty' is marked as 'val' and is not allowed to use any 'impure' expressions.

    impure def notPure(): Int = 5;

    def error(): Int = notPure(); //error: function 'error' is using impure expressions and has to be marked as 'impure'.

    def thisIsPure(): Int = 1;

    def pureBooleanExpression(): Boolean = 1 > 7;

    def impureBooleanExpression(): Boolean = 1 > notPure(); //error: function 'impureBooleanExpression' is using impure expressions and has to be marked as 'impure'.

    def modifyingSomeMutableValue(): Unit = someMutableValue = 10; //error: function 'modifyingSomeMutableValue' is using impure expressions and has to be marked as 'impure'.

    def accessingMutableProperty(): Int = someMutableValue; //error: function 'accessingMutableProperty' is using impure expressions and has to be marked as 'impure'.
}